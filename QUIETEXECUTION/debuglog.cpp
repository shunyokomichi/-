//=============================================================================
//
// デバックログ処理 [debuglog.cpp]
// Author :		荒谷由朗
//
//=============================================================================
#include "debuglog.h"
#include "manager.h"
#include "renderer.h"

//*****************************************************************************
// 静的メンバ変数
//*****************************************************************************
LPD3DXFONT	CDebuglog::m_pFont			= {};
char		CDebuglog::m_aStr[MAX_STR]	= {};

//=============================================================================
// コンストラクタ
//=============================================================================
CDebuglog::CDebuglog()
{
#ifdef _DEBUG
	m_pFont			= {};
	m_aStr[MAX_STR] = {};
#endif
}

//=============================================================================
// デストラクタ
//=============================================================================
CDebuglog::~CDebuglog()
{
}

//=============================================================================
// 初期化処理
//=============================================================================
void CDebuglog::Init(void)
{
#ifdef _DEBUG
	// デバイスの取得
	LPDIRECT3DDEVICE9		pDevice = CManager::GetRenderer()->GetDevice();

	// フォントの生成
	D3DXCreateFont(pDevice, 20, 0, 0, 0, FALSE, SHIFTJIS_CHARSET,
		OUT_DEFAULT_PRECIS, DEFAULT_QUALITY, DEFAULT_PITCH, "游明朝", &m_pFont);
#endif
}

//=============================================================================
// 終了処理
//=============================================================================
void CDebuglog::Uninit(void)
{
#ifdef _DEBUG
	// フォントの破棄
	if (m_pFont != NULL)
	{
		m_pFont->Release();
		//delete m_pFont;
		m_pFont = NULL;
	}
#endif
}

//=============================================================================
// 描画処理
//=============================================================================
void CDebuglog::Draw(void)
{
#ifdef _DEBUG
	RECT rect = { 0, 0, SCREEN_WIDTH, SCREEN_HEIGHT };

	// テキスト描画
	m_pFont->DrawText(NULL, m_aStr, -1, &rect, DT_LEFT, D3DXCOLOR(1.0f, 0.0f, 1.0f, 1.0f));

	m_aStr[0] = '\0';
#endif
}

//=============================================================================
// プリント関数
//=============================================================================
void CDebuglog::Print(int nNum, char *string, ...)
{
#ifdef _DEBUG
	va_list list;
	char text[MAX_STR];
	text[0] = '\0';

	va_start(list, string);					// listのポインターを初期化

	vsprintf(text, string, list);			// 文字列をテキストに代入

	if (nNum == 0)
	{
		wsprintf(&m_aStr[0], &text[0]);		// ローカルの文字列をメンバ変数に渡す(繰り返すと上書きされる)
	}
	else if (nNum == 1)
	{
		strcat(&m_aStr[0], &text[0]);		// ローカルの文字列をメンバ変数に渡す(最初にやると"とまるんじゃねぇぞ…"になる)
	}

	va_end(list);							// 書き込みの終了
#endif
}